[{"C:\\Users\\monki\\Projects\\demo\\src\\reportWebVitals.js":"1","C:\\Users\\monki\\Projects\\demo\\src\\Application.js":"2","C:\\Users\\monki\\Projects\\demo\\src\\HighScore.js":"3"},{"size":362,"mtime":1611088756393,"results":"4","hashOfConfig":"5"},{"size":1416,"mtime":1611169628545,"results":"6","hashOfConfig":"5"},{"size":421,"mtime":1611167999456,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"skzfup",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\monki\\Projects\\demo\\src\\reportWebVitals.js",[],"C:\\Users\\monki\\Projects\\demo\\src\\Application.js",["15"],"import React, { Component } from 'react';\r\nimport HighScore from './HighScore';\r\nimport './css/style.css'\r\n\r\nclass Application extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            count: 0,\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            count: this.state.count + 1,\r\n            overTen: false,\r\n        })\r\n    }\r\n\r\n    resetCount = (e) => {\r\n        this.setState({\r\n            count: 0,\r\n            overTen: false,\r\n        })\r\n    } \r\n\r\n    componentDidUpdate(props, state) {       // state is the previous state before being updated | This method is called every time the state changes\r\n        //console.log(\"Updated from\", state, \"to\", this.state);\r\n        if (this.state.count > 10 && this.state.count != state.count && !this.state.overTen) {\r\n            this.setState({ overTen: true });\r\n        }\r\n    }\r\n\r\n    render() { // render returns HTML, text, variables ...\r\n        let { count } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>You clicked the button {count} times</h1>\r\n                <HighScore overTen={this.state.overTen} onReset={(e) => this.resetCount(e)} />\r\n\r\n                <span>\r\n                    <button onClick={() => this.handleClick()}>Click Me</button>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;","C:\\Users\\monki\\Projects\\demo\\src\\HighScore.js",[],{"ruleId":"16","severity":1,"message":"17","line":31,"column":55,"nodeType":"18","messageId":"19","endLine":31,"endColumn":57},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]